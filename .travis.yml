os: linux
dist: bionic
language: minimal

# Travis limits run time to 50 min
# As it may be too short, we define 2 stages
jobs:
  include:
    - stage: stage1
      name: "Setup Env."
      script: skip
      after_success: skip
    - stage: stage2
      name: "Build"

# We maintain a manual cache to allow us to cache selected files
# and to restore files that would requires sudo access.
# Travis use environment to define cache key. As we use env vars to
# define our manual cache, any change would make us use a fresh cache
cache:
  directories:
  - /home/travis/.vagrant.d/boxes
  - $MANUAL_CACHE_DIR
  timeout: 180
env:
  global: 
    - MANUAL_CACHE_DIR=$HOME/cache
    - MANUAL_CACHE_SRC="/var/lib/libvirt/images/apt-cacher-ng-data.qcow2 /var/lib/libvirt/images/tails-website-cache.qcow2"
      # We dont cache the followings
      # /var/lib/libvirt/images/tails-builder*.img

addons:
  apt:
    update: true
    packages:
     - psmisc
     - git
     - rake
     - libvirt-daemon-system
     - dnsmasq-base
     - ebtables
     - qemu-system-x86
     - qemu-utils
     - vagrant
     - vagrant-libvirt
     - vmdebootstrap

before_install:
 # We setup Set Environment vars ourself, as defining them in
 # Travis configuration may end using a different cache, which
 # would completely defeat its purpose.
 - export TAILS_ORIGIN=https://salsa.debian.org/tails-team/tails/
 - export TAILS_VERSION=stable
 - export ARTIFACTS=".."
 # Remove travis overides
 - unset GEM_PATH GEM_HOME
 - for group in kvm libvirt libvirt-qemu; do
     sudo adduser "$(whoami)" "$group";
   done
 # Give vagrant-libvirt permission to read our $HOME
 # vagrant ssh breaks without it. !!!FIXME report!!!
 - sudo chmod 755 $HOME ; sudo chmod -R 755 $HOME/.ssh
 - sudo adduser libvirt-qemu "$(id -gn)"
 - sudo systemctl restart libvirtd
 # Simulate more ram, use it to build & other (sub) optims
 - sudo apt-get install -y linux-modules-extra-$(uname -r) zram-config
 - sudo /usr/bin/init-zram-swapping
 - echo Y | sudo tee /sys/module/zswap/parameters/enabled;
 - sudo fallocate -l 8G /swap; sudo mkswap /swap;
 - sudo swapon $(sudo losetup --direct-io -f /swap --show)
 - sudo mount -o remount,noatime,data=writeback /
 - export TAILS_BUILD_OPTIONS="ram"
 # Restore our manual cache
 - test -f $CACHE_DIR/*.tar && sudo tar -xf $CACHE_DIR/*.tar / || true

install:
 - git clone --recurse-submodules -j8 $TAILS_ORIGIN
 - cd tails; git checkout $TAILS_VERSION
 # We use sudo su $(whoami) to force re-read of added groups
 - sudo su "$(whoami)" -c "rake basebox:clean_old"
 - sudo su "$(whoami)" -c "rake basebox:create"
 - sudo su "$(whoami)" -c "rake vm:up"

script:
 # We dance to make travis happy \o/ while we output nothing
 - while sleep 5m; do echo "Staying aliiiveeeee"; done &
     timeout 2700 sudo su "$(whoami)" -c "rake build";
   kill %1

before_cache:
 - for x in $MANUAL_CACHE_SRC; do
     sudo tar -cf $MANUAL_CACHE_DIR/$(basename $x).tar $x;
   done
 - ls -lah $MANUAL_CACHE_DIR

after_success:
 - sha256sum $ARTIFACTS/*.img
 - sha256sum $ARTIFACTS/*.iso
